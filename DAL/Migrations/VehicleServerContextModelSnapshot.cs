// <auto-generated />
using System;
using DAL.VehicleServerService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(VehicleServerContext))]
    partial class VehicleServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("MODELS.VehicleServerInfo.Datalogger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SelectedDataloggerTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("SelectedDataloggerTypeID");

                    b.ToTable("Dataloggers");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.DataloggerType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CanChannels")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MemoryStorage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DataloggerTypes");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.Server", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IP_URL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SelectedServerCredentialsID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SelectedServerTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("SelectedServerCredentialsID");

                    b.HasIndex("SelectedServerTypeID");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.ServerCredentials", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ServerCredentials");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.ServerType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ServerTypes");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InstalledDataloggerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("VIN")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("InstalledDataloggerID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.Datalogger", b =>
                {
                    b.HasOne("MODELS.VehicleServerInfo.DataloggerType", "SelectedDataloggerType")
                        .WithMany()
                        .HasForeignKey("SelectedDataloggerTypeID");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.Server", b =>
                {
                    b.HasOne("MODELS.VehicleServerInfo.ServerCredentials", "SelectedServerCredentials")
                        .WithMany()
                        .HasForeignKey("SelectedServerCredentialsID");

                    b.HasOne("MODELS.VehicleServerInfo.ServerType", "SelectedServerType")
                        .WithMany()
                        .HasForeignKey("SelectedServerTypeID");
                });

            modelBuilder.Entity("MODELS.VehicleServerInfo.Vehicle", b =>
                {
                    b.HasOne("MODELS.VehicleServerInfo.Datalogger", "InstalledDatalogger")
                        .WithMany()
                        .HasForeignKey("InstalledDataloggerID");
                });
#pragma warning restore 612, 618
        }
    }
}
